generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bot {
  id          String    @id @default(cuid())
  name        String
  uid         String    @unique
  prompt      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  status      String    @default("active")
  openmic_uid String?
  callLogs    CallLog[]

  @@map("bots")
}

model Employee {
  id         String   @id @default(uuid())
  name       String
  department String
  floor      String
  room       String
  status     String
  createdAt  DateTime @default(now())  
  updatedAt  DateTime @updatedAt       

  @@index([name])  
  @@map("employees")
}

model Visitor {
  id               String   @id @default(uuid())
  name             String
  appointment      String
  expectedEmployee String
  phoneNumber      String?  @unique
  createdAt        DateTime @default(now())  
  updatedAt        DateTime @updatedAt      

  @@index([phoneNumber])  
  @@map("visitors")
}

model CallLog {
  id          String   @id @default(cuid())
  callId      String   @unique             
  botId       String
  visitor     String
  employee    String
  department  String
  arrivalTime DateTime
  duration    Int?     @default(0)        
  transcript  String?  @db.Text           
  status      String   @default("completed") 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt          
  bot         Bot      @relation(fields: [botId], references: [id], onDelete: Cascade)

  @@index([callId])    
  @@index([botId])     
  @@index([createdAt]) 
  @@map("call_logs")
}